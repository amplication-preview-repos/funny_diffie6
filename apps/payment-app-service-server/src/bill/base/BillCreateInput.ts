/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { OrderWhereUniqueInput } from "../../order/base/OrderWhereUniqueInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { OrderCreateNestedManyWithoutBillsInput } from "./OrderCreateNestedManyWithoutBillsInput";
import { PaymentTransactionCreateNestedManyWithoutBillsInput } from "./PaymentTransactionCreateNestedManyWithoutBillsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class BillCreateInput {
  @ApiProperty({
    required: false,
    type: () => OrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderWhereUniqueInput, {
    nullable: true,
  })
  order?: OrderWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutBillsInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutBillsInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutBillsInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutBillsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentTransactionCreateNestedManyWithoutBillsInput,
  })
  @ValidateNested()
  @Type(() => PaymentTransactionCreateNestedManyWithoutBillsInput)
  @IsOptional()
  @Field(() => PaymentTransactionCreateNestedManyWithoutBillsInput, {
    nullable: true,
  })
  paymentTransactions?: PaymentTransactionCreateNestedManyWithoutBillsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  qrCode?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { BillCreateInput as BillCreateInput };
